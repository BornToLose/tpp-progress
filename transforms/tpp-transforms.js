var __extends=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},TPP;!function(t){var e;!function(t){t[t.Weeks=0]="Weeks",t[t.Days=1]="Days",t[t.Hours=2]="Hours",t[t.Minutes=3]="Minutes"}(e=t.Scale||(t.Scale={}))}(TPP||(TPP={}));var Twitch;!function(t){function e(t,e){void 0===e&&(e=!0);var r=[],o=function(t){return t.videos.length&&(r=r.concat.apply(r,t.videos.map(function(t){return new i(t.recorded_at,t.length,t.url,"Twitch")})),e&&t._total)?n(t._links.next).then(o):r};return $.when(n("https://api.twitch.tv/kraken/channels/"+t+"/videos?broadcasts=true&limit=100").then(o),n("https://api.twitch.tv/kraken/channels/"+t+"/videos?limit=100").then(o))}function n(t){return $.get(t+(t.indexOf("?")>0?"&":"?")+"client_id="+r)}var r="l6ejgsj101ymei0f6v4a6nkjw9upml9",i=function(){function t(t,e,n,r){this.recorded_at=t,this.length=e,this.url=n,this.source=r,this.StartTime=new Date(t).valueOf()/1e3,this.EndTime=this.StartTime+e}return t}();t.Video=i,t.GetVideos=e}(Twitch||(Twitch={}));var TPP;!function(t){var e=function(){function e(t,n,r,i,o){if(void 0===n&&(n=0),void 0===r&&(r=0),void 0===i&&(i=0),void 0===o&&(o=0),this.days=n,this.hours=r,this.minutes=i,this.seconds=o,"string"==typeof t){var s=e.parse(t);this.days=s.days,this.hours=s.hours,this.minutes=s.minutes,this.seconds=s.seconds}else this.days+=7*t}return Object.defineProperty(e.prototype,"TotalSeconds",{get:function(){return this.seconds+60*this.minutes+60*this.hours*60+60*this.days*60*24},set:function(t){this.seconds=Math.floor(t%60),this.minutes=Math.floor(t/60)%60,this.hours=Math.floor(t/60/60)%24,this.days=Math.floor(t/60/60/24)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TotalHours",{get:function(){return this.TotalSeconds/60/60},set:function(t){this.TotalSeconds=60*t*60},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TotalDays",{get:function(){return this.TotalHours/24},set:function(t){this.TotalHours=24*t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TotalWeeks",{get:function(){return this.TotalDays/7},set:function(t){this.TotalDays=7*t},enumerable:!0,configurable:!0}),e.prototype.TotalTime=function(e){switch(e){case t.Scale.Weeks:return this.TotalWeeks;case t.Scale.Hours:return this.TotalHours/4;case t.Scale.Minutes:return 6*this.TotalHours}return this.TotalDays},e.prototype.toString=function(e){return void 0===e&&(e=t.Scale.Days),(e==t.Scale.Minutes?60*(24*this.days+this.hours)+this.minutes:(e==t.Scale.Hours?24*this.days+this.hours:(e==t.Scale.Weeks?Math.floor(this.days/7)+"w "+this.days%7:this.days)+"d "+this.hours)+"h "+this.minutes)+"m"+(this.seconds?" "+this.seconds+"s":"")},e.parse=function(t,n){var r=new e(0,0,0,0);if(t){if(this.canParse(t))try{var i=this.parseReg.exec(t);return new e(parseInt(i[1])||0,parseInt(i[2])||0,parseInt(i[3])||0,parseInt(i[4])||0,parseInt(i[5])||0)}catch(t){}n&&(r.TotalSeconds=Date.parse(t)/1e3-n)}return r},e.canParse=function(t){return this.parseReg.test(t)},e}();e.parseReg=/^\s*(?:(\d*)w)?\s*(?:(\d*)d)?\s*(?:(\d*)h)?\s*(?:(\d*)m)?\s*(?:(\d*)s)?\s*$/i,t.Duration=e}(TPP||(TPP={}));var TPP;!function(t){var e;!function(t){var e=function(){function t(){this.OwnedDict={},this.HallOfFame=[]}return t}();t.RunSummaryBase=e;var n=function(){function t(){this.Summary=[],this.HallOfFame=[]}return t}();t.CollectionSummaryBase=n;var r=function(){function t(){this.Owners=[],this.HallOfFame=[]}return Object.defineProperty(t.prototype,"IsOwned",{get:function(){return this.Owners&&this.Owners.length>0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FirstOwnedRun",{get:function(){return this.IsOwned?this.Owners[0].Run:{}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FirstCaughtDate",{get:function(){return!!this.IsOwned&&this.Owners[0].CaughtOn},enumerable:!0,configurable:!0}),t}();t.DexEntryBase=r;var i;!function(t){t[t["Pokédex Number"]=0]="Pokédex Number",t[t.Alphabetical=1]="Alphabetical",t[t["First Owned"]=2]="First Owned"}(i=t.DexSorting||(t.DexSorting={}));var o=function(){function t(){this.Entries=[]}return Object.defineProperty(t.prototype,"NoGlitchMon",{get:function(){return this.Entries.filter(function(t){return!(0==t.Number&&"MissingNo."==t.Pokemon)})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TotalOwned",{get:function(){return this.NoGlitchMon.filter(function(t){return t.IsOwned}).length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TotalInDex",{get:function(){return this.NoGlitchMon.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OwnedPercentage",{get:function(){return this.TotalOwned/this.TotalInDex*100},enumerable:!0,configurable:!0}),t.prototype.SortDex=function(t){switch(void 0===t&&(t=0),t){case 0:case i[0]:default:this.Entries=this.Entries.sort(function(t,e){return t.Number-e.Number});break;case 1:case i[1]:this.Entries=this.Entries.sort(function(t,e){return t.Pokemon.localeCompare(e.Pokemon)});break;case 2:case i[2]:this.Entries=this.Entries.sort(function(t,e){return(t.FirstCaughtDate||Date.now())-(e.FirstCaughtDate||Date.now())})}},t.prototype.FilterDexToOwned=function(){this.Entries=this.Entries.filter(function(t){return t.IsOwned})},t.prototype.FilterDexToUnowned=function(){this.Entries=this.Entries.filter(function(t){return!t.IsOwned})},t.prototype.FilterDexRuns=function(t){var e=t.map(function(t){return"string"==typeof t?t.toLowerCase().trim():t});this.Entries=this.Entries.filter(function(t){return t.Owners.filter(function(t){return e.filter(function(e){return"string"==typeof e?t.Run.RunName.toLowerCase().indexOf(e)>=0:t.Run.RunName==e.RunName}).length>0}).length>0})},t.prototype.FilterDexPokemon=function(t){t=t.map(function(t){return t.toLowerCase().trim()}),this.Entries=this.Entries.filter(function(e){return t.indexOf(e.Pokemon.toLowerCase())>=0})},t.prototype.FilterDexToHallOfFame=function(){this.Entries=this.Entries.filter(function(t){return t.HallOfFame.length>0})},t}();t.GlobalDexBase=o}(e=t.Pokedex||(t.Pokedex={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(e){var n;!function(e){var n=function(e){function n(t,n){var r=e.call(this)||this;return r.Run=t,t.Events.filter(function(t){return"Pokemon"==t.Group&&(n.indexOf(t.Name)>=0||n.indexOf(t.Class)>=0)}).length&&(r.FillOwnedDict(n),r.FillHallOfFame(n)),r}return __extends(n,e),n.prototype.FillOwnedDict=function(e){var n=this;this.InitOwnedDict(e),this.Run.Events.filter(function(t){return"Pokemon"==t.Group}).forEach(function(r){var i=t.Duration.parse(r.Time,n.Run.StartTime).TotalSeconds+n.Run.StartTime;n.AddOwnedPokemonIfRecognized(r.Name,i,e)||n.AddOwnedPokemonIfRecognized(r.Class,i,e)})},n.prototype.AddOwnedPokemonIfRecognized=function(t,e,n){return!(n.indexOf(t)<0)&&(this.OwnedDict[t]=this.OwnedDict[t]&&this.OwnedDict[t]<e?this.OwnedDict[t]:e,!0)},n.prototype.InitOwnedDict=function(t){var e=this;this.OwnedDict={},t.forEach(function(t){return e.OwnedDict[t]=!1})},n.prototype.FillHallOfFame=function(e){var n=this;this.Run.Events.filter(function(e){return e.Party&&t.Duration.parse(e.Time,n.Run.StartTime).TotalSeconds>=0}).forEach(function(r){return r.Party.forEach(function(i){var o=e.indexOf(i.Pokemon)>=0?i.Pokemon:e.indexOf(i.Class)>=0?i.Class:null;o&&n.HallOfFame.push({Pokemon:o,Ribbon:r.Image,RunName:n.Run.RunName,HostName:n.Run.HostName,Nickname:(i.Nickname||i.Pokemon).replace(/π/g,"ᴾk").replace(/µ/g,"ᴹn"),UnmodifiedNick:i.Nickname,PreviousNick:i.PreviousNick,Time:t.Duration.parse(r.Time,n.Run.StartTime).TotalSeconds+n.Run.StartTime})})})},n}(t.Pokedex.RunSummaryBase);e.RunSummary=n}(n=e.Pokedex||(e.Pokedex={}))}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(e){var n;!function(e){var n=function(t){function n(n,r){var i=t.call(this)||this,o=[];return n.forEach(function(t){return t.Runs.forEach(function(t){return o.push(new e.RunSummary(t,r))})}),i.Summary=o.sort(function(t,e){return t.Run.StartTime-e.Run.StartTime}),i.FilterHoFToUniques(),i}return __extends(n,t),n.prototype.FilterHoFToUniques=function(){var t=this.Summary.map(function(t){return t.HallOfFame}).reduce(function(t,e){return t.concat(e)}).sort(function(t,e){return t.Time-e.Time});this.HallOfFame=t.filter(function(e){return t.filter(function(t){return t.HostName==e.HostName&&t.Pokemon==e.Pokemon&&(t.Nickname==e.Nickname||e.PreviousNick==t.UnmodifiedNick)}).shift()==e})},n}(t.Pokedex.CollectionSummaryBase);e.CollectionSummary=n}(n=e.Pokedex||(e.Pokedex={}))}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(e){var n;!function(e){var n=function(t){function e(e,n,r){var i=t.call(this)||this;return i.Number=n,i.Pokemon=e,e&&(i.GatherPokemonFromRuns(r),i.GatherHallOfFameEntries(r)),i}return __extends(e,t),e.prototype.GatherPokemonFromRuns=function(t){var e=this;t.Summary.forEach(function(t){return t.OwnedDict[e.Pokemon]&&e.Owners.push({Run:t.Run,CaughtOn:t.OwnedDict[e.Pokemon]})}),this.Owners=this.Owners.sort(function(t,e){return t.CaughtOn-e.CaughtOn}),this.FilterRevisitsIfPreviouslyOwned()},e.prototype.FilterRevisitsIfPreviouslyOwned=function(){var t=this;this.Owners=this.Owners.filter(function(e){return!e.Run.Revisit||0==t.Owners.filter(function(t){return t.Run.RunName==e.Run.Revisit.Run}).length})},e.prototype.GatherHallOfFameEntries=function(t){var e=this;this.HallOfFame=t.HallOfFame.filter(function(t){return t.Pokemon==e.Pokemon}).sort(function(t,e){return t.Time-e.Time})},e}(t.Pokedex.DexEntryBase);e.DexEntry=n}(n=e.Pokedex||(e.Pokedex={}))}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(t){var e;!function(t){function e(t,e){return void 0===e&&(e=r),t.map(function(t){return"string"==typeof t?t:e[t]})}function n(t,e){return void 0===e&&(e=r),e.slice(0,(t||e.length)+1)}var r="undefined"!=typeof window?((window||{}).Pokedex||{}).PokeList||[]:[];t.DexMerge=e,t.ClipNationalDex=n}(e=t.Pokedex||(t.Pokedex={}))}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(e){var n;!function(e){var n=function(t){function n(n,r){var i=t.call(this)||this;return i.Entries=r.map(function(t,r){return new e.DexEntry(t,r,n)}).filter(function(t){return!!t.Pokemon}),i}return __extends(n,t),n}(t.Pokedex.GlobalDexBase);e.GlobalDex=n}(n=e.Pokedex||(e.Pokedex={}))}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));var TPP;!function(t){var e;!function(t){function e(t){return t.Scraper&&"function"==typeof Scrape?Scrape(t).then(function(e){return t},function(e){return t}):$.when(t)}function n(t){return $.when.apply($,t.Runs.map(e)).then(function(e){return t},function(e){return t})}function r(t){return $.when.apply($,t.map(n)).then(function(e){return t},function(e){return t})}t.UpdateRunData=e,t.UpdateCollectionData=n,t.UpdateData=r}(e=t.Transforms||(t.Transforms={}))}(TPP||(TPP={}));